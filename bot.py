import logging
import random
from telegram import Update
from telegram.ext import Application, CommandHandler, MessageHandler, filters, CallbackContext

# –í–∫–ª—é—á–∞–µ–º –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
logging.basicConfig(
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s',
    level=logging.INFO
)
logger = logging.getLogger(__name__)

# –°–ø–∏—Å–æ–∫ –≤–æ–∑–º–æ–∂–Ω—ã—Ö —É–ª–æ–≤–æ–≤
fish_list = [
    "üêü –ö–∞—Ä–ø",
    "üê† –§–æ—Ä–µ–ª—å",
    "üê° –†—ã–±–∞-—à–∞—Ä",
    "ü¶à –ê–∫—É–ª–∞",
    "üêô –û—Å—å–º–∏–Ω–æ–≥",
    "ü¶Ä –ö—Ä–∞–±",
    "üë¢ –ë–æ—Ç–∏–Ω–æ–∫",
    "üóëÔ∏è –ú—É—Å–æ—Ä",
    "üíé –ê–ª–º–∞–∑",
    "üß¶ –ù–æ—Å–æ–∫"
]

# –ö–æ–º–∞–Ω–¥–∞ /start
async def start(update: Update, context: CallbackContext) -> None:
    await update.message.reply_text('–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –Ω–∞ —Ä—ã–±–∞–ª–∫—É! –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É /fish, —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å –ª–æ–≤–∏—Ç—å —Ä—ã–±—É.')

# –ö–æ–º–∞–Ω–¥–∞ /fish
async def fish(update: Update, context: CallbackContext) -> None:
    user = update.message.from_user
    catch = random.choice(fish_list)
    await update.message.reply_text(f'{user.first_name}, –≤—ã –ø–æ–π–º–∞–ª–∏: {catch}!')

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω—ã—Ö –∫–æ–º–∞–Ω–¥
async def unknown(update: Update, context: CallbackContext) -> None:
    await update.message.reply_text("–ò–∑–≤–∏–Ω–∏—Ç–µ, —è –Ω–µ –ø–æ–Ω–∏–º–∞—é —ç—Ç—É –∫–æ–º–∞–Ω–¥—É.")

def main() -> None:
    # –í—Å—Ç–∞–≤—å—Ç–µ —Å—é–¥–∞ –≤–∞—à —Ç–æ–∫–µ–Ω
    application = Application.builder().token("8029476647:AAHxrpRVyK-osNrapg5F-BWmyngcGPwqSHM").build()

    # –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –∫–æ–º–∞–Ω–¥
    application.add_handler(CommandHandler("start", start))
    application.add_handler(CommandHandler("fish", fish))

    # –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω—ã—Ö –∫–æ–º–∞–Ω–¥
    application.add_handler(MessageHandler(filters.COMMAND, unknown))

    # –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
    application.run_polling()

if __name__ == '__main__':
    main()